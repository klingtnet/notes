name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.15.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: |
          make notes
      - name: Archive build artifact
        uses: actions/upload-artifact@v2
        with:
          name: notes-${{ matrix.platform }}
          path: notes
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux Build
        id: upload-linux-build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: notes-ubuntu-latest/notes
          asset_name: notes-linux-amd64
          asset_content_type: application/octet-stream
      - name: Upload Mac Build
        id: upload-mac-build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: notes-macos-latest/notes
          asset_name: notes-macos-amd64
          asset_content_type: application/octet-stream
